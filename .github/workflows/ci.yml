on: [push, pull_request]

name: CI

jobs:
  ci:
    strategy:
      matrix:
        go-version: [1.14.x, 1.15.x]
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          MYSQL_USER: glloq_user
          MYSQL_PASSWORD: glloq_password
          MYSQL_DATABASE: glloq
          MYSQL_ROOT_PASSWORD: root_pwd
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      mysql:
        image: mysql:5.7
        env:
          POSTGRES_DB: glloq_user
          POSTGRES_PASSWORD: glloq_password
          POSTGRES_USER: glloq
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}

    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Lint
      uses: golangci/golangci-lint-action@v2
      with:
        version: v1.31

    - name: Test
      # Quotes for "-coverprofile=cover.out" are required for Windows because of the "." in the argument name.
      run: go test -v -covermode=atomic "-coverprofile=profile.cov" ./...
      env:
        POSTGRES_DSN: postgres://glloq_user:glloq_password@localhost:5432/glloq
        MYSQL_DSN: mysql://glloq_user:glloq_password@localhost:3306/glloq

    - name: Send coverage
      uses: shogo82148/actions-goveralls@v1
      if: matrix.go-version == '1.15.x'
      with:
        path-to-profile: profile.cov

    -
      name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v2
      if: >-
        matrix.go-version == '1.15.x'
        && startsWith(github.ref, 'refs/tags/')
      with:
        version: latest
        args: release --rm-dist
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
